package com.rest.api.exceptionhandler;

import java.time.LocalDateTime;
import java.util.ArrayList;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.MessageSource;
import org.springframework.context.i18n.LocaleContextHolder;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.ObjectError;
import org.springframework.web.bind.MethodArgumentNotValidException;
import org.springframework.web.bind.annotation.ControllerAdvice;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.context.request.WebRequest;
import org.springframework.web.servlet.mvc.method.annotation.ResponseEntityExceptionHandler;

import com.rest.api.domain.exception.Negocio;
import com.rest.api.exceptionhandler.Problema.Campo;

@ControllerAdvice //componente do spring onde coloca os tratamentos de exception de todos controladores
public class ApiExceptionHandler extends ResponseEntityExceptionHandler {
	
	@Autowired
	private MessageSource MessageSource;
	
	
	@ExceptionHandler(Negocio.class)
	public ResponseEntity<Object> handleNegocio(Negocio exception, WebRequest request){
	
		String var = HttpStatus.BAD_REQUEST;
		
	}
	
	@Override
	protected ResponseEntity<Object> handleMethodArgumentNotValid(MethodArgumentNotValidException ex,
			HttpHeaders headers, HttpStatus status, WebRequest request) {
		// TODO Auto-generated method stub
		
		ArrayList<Problema.Campo> campos = new ArrayList<>();
		
		for(ObjectError error: ex.getBindingResult().getAllErrors()) {
			
			String nome = error.getObjectName();
			String mensagem = MessageSource.getMessage(error, LocaleContextHolder.getLocale());
			
			campos.add(new Problema.Campo());
		}
		
		Problema problema = new Problema(campos);
		problema.setStatus(status.value());
		problema.setTitulo("Um ou mais campos estão inválidos. Corrija e tente novamente");
		problema.setDataHora(LocalDateTime.now());
		problema.setCampos(campos);
		
		return super.handleExceptionInternal(ex, problema, headers, status, request);
	}
}
